Introduction:
    In this section, you will learn about dart abstract class. Before learning about abstract class, you should have a basic understanding of class, object, constructor, and inheritance. Previously you learned how to define a class. These classes are concrete classes. You can create an object of concrete classes, but you cannot create an object of abstract classes.

Abstract Class:
    Abstract classes are classes that cannot be initialized. It is used to define the behavior of a class that can be inherited by other classes. An abstract class is declared using the keyword abstract.

    Syntax:
        abstract class ClassName {
            //Body of abstract class

            method1();
            method2();
        }


Abstract Method:
    An abstract method is a method that is declared without an implementation. It is declared with a semicolon (;) instead of a method body.

    Syntax:
        abstract class ClassName {
            //Body of abstract class
            method1();
            method2();
        }


Why We Need Abstract Class:
    Subclasses of an abstract class must implement all the abstract methods of the abstract class. It is used to achieve abstraction in the Dart programming language.


Key Points To Remember:
    - You canâ€™t create an object of an abstract class.
    - It can have both abstract and non-abstract methods.
    - It is used to define the behavior of a class that other classes can inherit.
    - Abstract method only has a signature and no implementation.

    