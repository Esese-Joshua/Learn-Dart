Named Constructor In Dart:
    In most programming languages like java, c++, c#, etc., we can create multiple constructors with the same name. But in Dart, this is not possible. Well, there is a way. We can create multiple constructors with the same name using named constructors.

    Note: Named constructors improves code readability. It is useful when you want to create multiple constructors with the same name.


Example:
    In this example below, there is a class Student with three properties: name, age, and rollNumber. The class has two constructors. The first constructor is a default constructor. The second constructor is a named constructor. The named constructor is used to initialize the values of the three properties. We also have an object of the class Student called student.

    class Student {
        String? name;
        int? age;
        int? rollNumber;

        // Default Constructor
        Student() {
            print("This is a default constructor");
        }

        // Named Constructor
        Student.namedConstructor(String name, int age, int rollNumber) {
            this.name = name;
            this.age = age;
            this.rollNumber = rollNumber;
        }
        }

    void main() {
    // Here student is object of class Student.
    Student student = Student.namedConstructor("John", 20, 1);
    print("Name: ${student.name}");
    print("Age: ${student.age}");
    print("Roll Number: ${student.rollNumber}");
    }


    Show Output:
    This is a default constructor
    Name: John
    Age: 20
    Roll Number: 1


Example 2:
    In this example below, there is class Mobile with three properties name, color, and price. The class has one method display which prints out the values of the three properties. We also have an object of the class Mobile called mobile. There is also constructor Mobile which takes all the three properties as parameters. Named constructor Mobile.namedConstructor is used to create an object of the class Mobile with name, color and optional price. The default value of the price is 0. If the price is not passed, then the default value is used.

    class Mobile {
        String? name;
        String? color;
        int? price;

        Mobile(this.name, this.color, this.price);
        // here Mobile() is a named constructor
        Mobile.namedConstructor(this.name, this.color, [this.price = 0]);

        void displayMobileDetails() {
            print("Mobile name: $name.");
            print("Mobile color: $color.");
            print("Mobile price: $price");
        }
        }

    void main() {
    var mobile1 = Mobile("Samsung", "Black", 20000);
    mobile1.displayMobileDetails();
    var mobile2 = Mobile.namedConstructor("Apple", "White");
    mobile2.displayMobileDetails();
    }

    Show Output:
        Mobile name: Samsung.
        Mobile color: Black.
        Mobile price: 20000
        Mobile name: Apple.
        Mobile color: White.
        Mobile price: 0

        