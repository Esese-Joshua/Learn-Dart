Dart Break and Continue

In this tutorial, you will learn about the break and continue in dart. While working on loops, we need to skip some elements or terminate the loop immediately without checking the condition. In such a situation, you can use the break and continue statement.


Break Statement:
    Sometimes you will need to break out of the loop immediately without checking the condition. You can do this using break statement.

    The break statement is used to exit a loop. It stops the loop immediately, and the programâ€™s control moves outside the loop. 

    Here, the loop condition is true until the value of i is less than or equal to 10. However, the break says to go outside the loop when the value of i becomes 5.

        void main() {
        for (int i = 1; i <= 10; i++) {
            if (i == 5) {
            break;
            }
            print(i);
           }
        }    

Continue Statement:
    Sometimes you will need to skip an iteration for a specific condition. You can do this utilizing continue statement.

    The continue statement skips the current iteration of a loop. It will bypass the statement of the loop. It does not terminate the loop but rather continues with the next iteration. 

    Example 1: 
    Continue In Dart:
        Here, the loop condition is true until the value of i is less than or equal to 10. However, the continue says to go to the next iteration of the loop when the value of i becomes 5.        

            void main() {
                for (int i = 1; i <= 10; i++) {
                    if (i == 5) {
                    continue;
                    }
                    print(i);
                }
                }

                